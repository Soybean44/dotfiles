#!/bin/sh

search_dirs="$(find ~/code -mindepth 1 -maxdepth 1) $(find ~/syncthing/uni -mindepth 3 -maxdepth 3)"

switch_to() {
    if [[ -z $TMUX ]]; then
        tmux attach-session -t $1
    else
        tmux switch-client -t $1
    fi
}

has_session() {
    tmux list-sessions | grep -q "^$1:"
}

hydrate() {
    if [ -f $2/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $2/.tmux-sessionizer" c-M
    elif [ -f $HOME/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $HOME/.tmux-sessionizer" c-M
    fi
}

if [[ $# -eq 1 ]]; then
    if [[ $1 = "new" ]] then
        parent_dir=$(find $search_dirs -maxdepth 1 -not -name ".git" -type d | fzf)
        read -p "Directory Name: " -r dir_name
        selected="$parent_dir/$dir_name"
    else
        selected=$1
    fi
else
    # If someone wants to make this extensible, i'll accept
    # PR
    selected=$(find $search_dirs ~/.config -mindepth 1 -maxdepth 1 -not -name ".git" -type d | fzf)
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s $selected_name -c $selected
    tmux new-window -c $selected
    tmux previous-window
    exit 0
fi

if ! has_session $selected_name; then
    tmux new-session -ds $selected_name -c $selected
    tmux new-window -c $selected
    tmux previous-window
fi

switch_to $selected_name
