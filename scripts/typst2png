#!/bin/bash
#---------------------------------------------------------------------#
# Typst - Soybean44
# This scipt will open up $EDITOR and create and append a typst png to the clipboard
# If you wish to change the template file, just update the path of $template_file or edit the template file at the path specified
#---------------------------------------------------------------------#

# Check if the necessary packages are installed
if ! command -v typst >/dev/null 2>&1 || ! command -v magick >/dev/null 2>&1 || ! command -v xclip >/dev/null 2>&1; then
    echo "Error: Please install the following packages: typst, magick, xclip"
    exit 1
fi

cd "/tmp/"
input_file="math"

prev_flag=0
make_flag=1
edit_flag=1

make_file() {
  template_file="$HOME/dotfiles/scripts/template.typ"
  if [ ! -f $template_file ]; then
      echo "Error: Make sure template file exists"
      exit 1
  fi
  #create math file
  cp "$template_file" "/tmp/$input_file.typ"
}

edit_file() {
  if [[ ! -f "$input_file.typ" ]]; then
    read -p "No temp file exists, create one? [y/N]: " -r confirm
    case $confirm in
      y|Y|yes|Yes|YES) make_file;;
      *) exit 0;;
    esac
  fi
  if [[ $EDITOR == "vi" ]] || [[ $EDITOR == "vim" ]] || [[ $EDITOR == "nvim" ]] ; then
    $EDITOR +5 "/tmp/$input_file.typ"
  else
    $EDITOR "/tmp/$input_file.typ"
  fi
}

compile_and_copy() {
  if [[ ! -f "$input_file.typ" ]]; then
    exit 1
  fi
  # Generate the PDF file
  typst c -f png --ppi 2000 "$input_file.typ"
  if [[ $prev_flag == 1 ]]; then
    feh -Z. "$input_file.png" &
    feh_pid=$!
    read -p "Do you want to make changes [y/N]: " -r confirm
    case $confirm in
      y|Y|yes|Yes|YES) edit_flag=1;;
      *) prev_flag=0;;
    esac
    kill $feh_pid
  fi
  if [[ $prev_flag == 0 ]]; then
    # Copy image to the clipboard
    xclip -selection clipboard -t image/png "$input_file.png"

    echo "The PNG image has been copied to the clipboard."
  fi
}

help_dialogue() {

      echo "Useage: typst2png [opts]"
      echo "  -h | --help: Opens this help menu"
      echo "  -p | --preview: Previews the file and asks you if you want to make further changes"
      echo "  -o | --old: Doesn't overwrite the previous tmp file, allowing for edits"
      echo "  -r | --recompile: Recompile's the old file without editing it"
      exit 0
}

while getopts 'hpor-:' OPTION; do
  case "$OPTION" in
    h)
      help_dialogue
      ;;
    p)
      prev_flag=1
      ;;
    o)
      make_flag=0
      ;;
    r)
      make_flag=0
      edit_flag=0
      ;;
    -)
      case $OPTARG in
        help)
          help_dialogue
          ;;
        preview)
          prev_flag=1
          ;;
        old)
          make_flag=0
          ;;
        recompile)
          make_flag=0
          edit_flag=0
          ;;
        ?)
          help_dialogue
          ;;
      esac
      ;;
    ?)
      help_dialogue
      ;;
  esac
done
shift "$(($OPTIND -1))"

if [[ $make_flag == 1 ]]; then
  make_file
fi

while true; do
  if [[ $edit_flag == 1 ]]; then
    edit_file
  fi
  compile_and_copy
  [[ $prev_flag == 1 ]] || break
done
